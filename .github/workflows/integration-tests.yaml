name: tests
env:
  AWS_DEFAULT_REGION: us-east-2
  AWS_DEFAULT_OUTPUT: json
on:
  push: {branches: [main]}
  pull_request: {branches: [main]}
jobs:
  eks:
    outputs:
      cluster-name: ${{ steps.create-cluster.outputs.cluster-name }}
      oidc-arn: ${{ steps.oidc.outputs.arn }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [ "1.17" ]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
    - run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    - id: create-cluster
      run: echo "::set-output name=cluster-name::my-cluster"
      #  eksctl create cluster --name aws-iam-controller-integration-${{ github.run_number }}
      #  echo "::set-output name=cluster-name::aws-iam-controller-integration-${{ github.run_number }}"
    - id: oidc
      run: |
        id=$(aws eks describe-cluster --name ${{ steps.create-cluster.outputs.cluster-name }} --query "cluster.identity.oidc.issuer" --output text | rev | cut -d"/" -f1 | rev)
        arn=$(aws iam list-open-id-connect-providers --query "OpenIDConnectProviderList" --output text | grep $id)
        echo "::set-output name=arn::$arn"
  terraform:
    needs: [eks]
    outputs:
      role-arn: ${{ steps.role-arn.outputs.role-arn }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/aws-iam-controller
    strategy:
      fail-fast: false
      matrix:
        go-version: [ "1.17" ]
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
    - name: init
      run: terraform init
    - name: apply
      run: |
          terraform apply -var=account_id=${{ secrets.AWS_ACCOUNT_ID }} -var=principal='{"Federated": "${{ needs.eks.outputs.oidc-arn }}"}'
    - run: echo "::set-output name=role-arn::$(terraform output -raw role-arn)"
      id: role-arn
  integration:
    needs: [terraform,eks]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [ "1.17" ]
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          username: ${{ DOCKERHUB_USERNAME }}
          password: ${{ DOCKERHUB_ACCESS_TOKEN }}
      - run: make docker-build
      - run: make docker-push
      - run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      - run: aws eks update-kubeconfig --name ${{ needs.eks.outputs.cluster-name }}
      - run: make deploy
  cleanup:
    if: always()
    needs:
    - terraform
    - integration
    - eks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [ "1.17" ]
    steps:
    - run: |
        eksctl delete cluster ${{ needs.eks.outputs.cluster-name }}-1 || true
